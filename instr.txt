This is a documentation for the ZC2K
==============================================
add - add 2 registers and store in 3rd register
div - divide 2 registers and store in 3rd register
mul - multiply 2 registers and store in 3rd register
and - bitwise and regA and regB and store in regC
nor - bitwise nor regA and regB and store in regC
movi - move immediate into a register
beq - branch if two registers are equal to pc+1+offset
jalr - store pc+1 in regA and jump to address in regB
lw - load value at val at RegA + offset
sw - store value in regB at val of RegA + offset
push - push value at regA to stack
pop - pop value from stack into regA 
mov - move value from regA to regB
noop - does nothing
halt - halts program
